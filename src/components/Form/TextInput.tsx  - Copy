import React, { useState } from 'react';
import { StyleSheet, TextInput as RNTextInput, TextInputProps as RNTextInputProps } from 'react-native';
import { Box, theme } from '../../../components';

import FeatherIcon from 'react-native-vector-icons/Feather';

interface TextInputProps extends RNTextInputProps {
	icon: string;
	validator: (input: string) => boolean;
}

const SIZE = theme.borderRadii.m * 2;
const Valid = true;
const Invalid = false;
const Pristine = null;
type InputState = typeof Valid | typeof Invalid | typeof Pristine;

const TextInput = ({ icon, validator, ...props }: TextInputProps) => {
	const [input, setInput] = useState('');
	const [state, setState] = useState<null | boolean>(Pristine);
	const reColor: keyof typeof theme.colors = state === Pristine ? 'text' : state === Valid ? 'primary' : 'danger';
	const color = theme.colors[reColor];
	const onChangeText = (text: string) => {
		setInput(text);
		if (state !== Pristine) {
			validate();
		}
	};
	const validate = () => {
		const valid = validator(input);
		setState(valid);
	};

	return (
		<Box flexDirection="row" alignItems="center" height={52} borderRadius="s" borderColor={reColor} borderWidth={StyleSheet.hairlineWidth} padding="s">
			<Box padding="s">
				<FeatherIcon name={icon} size={16} {...{ color }} />
			</Box>

			<Box flex={1}>
				<RNTextInput underlineColorAndroid="transparent" {...props} placeholderTextColor={color} onBlur={validate} {...{ onChangeText }} />
			</Box>

			{(state === Valid || state === Invalid) && (
				<Box height={SIZE} width={SIZE} borderRadius="xl" justifyContent="center" alignItems="center" backgroundColor={state === Valid ? 'primary' : 'danger'}>
					<FeatherIcon name={state === Valid ? 'check' : 'x'} color="background" size={16} />
				</Box>
			)}
		</Box>
	);
};

export default TextInput;
